name: Release

on:
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: read

jobs:
  # This job checks if the release should be triggered and extracts the tag
  parse_release_info:
    name: Parse Release Info from PR
    runs-on: ubuntu-latest
    # Run only for merged PRs that contain the #release keyword
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.body, '#release')
    outputs:
      should_release: ${{ steps.get_tag.outputs.should_release }}
      tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - name: Get tag from PR body
        id: get_tag
        run: |
          # Extracts 'vX.Y.Z' from a line containing '#release vX.Y.Z'
          TAG=$(echo "${{ github.event.pull_request.body }}" | grep -oP '#release\s+\K(v[0-9]+\.[0-9]+\.[0-9]+)')
          if [ -n "$TAG" ]; then
            echo "Found release tag: $TAG"
            echo "should_release=true" >> $GITHUB_OUTPUT
            echo "tag=$TAG" >> $GITHUB_OUTPUT
          else
            echo "No release tag found in PR body. Skipping release."
            echo "should_release=false" >> $GITHUB_OUTPUT
          fi

  build:
    name: Build for ${{ matrix.target }}
    needs: parse_release_info
    if: needs.parse_release_info.outputs.should_release == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: leaf
            archive_name: leaf-linux-x86_64.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: leaf.exe
            archive_name: leaf-windows-x86_64.zip

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache cargo registry, index, and target
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create archive (Linux)
      if: runner.os == 'Linux'
      run: |
        mkdir staging
        cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} staging/
        cd staging && tar -czf ../${{ matrix.archive_name }} .
        cd ..
        echo "‚úÖ Archive created: ${{ matrix.archive_name }}"

    - name: Create archive (Windows)
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        New-Item -ItemType Directory -Name staging
        Copy-Item -Path "target/${{ matrix.target }}/release/${{ matrix.binary_name }}" -Destination "staging/"
        Compress-Archive -Path "staging/*" -DestinationPath "${{ matrix.archive_name }}"
        echo "‚úÖ Archive created: ${{ matrix.archive_name }}"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.archive_name }}
        path: ${{ matrix.archive_name }}
        retention-days: 1

  release:
    name: Create GitHub Release
    needs: [parse_release_info, build]
    if: needs.parse_release_info.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.parse_release_info.outputs.tag }}
        name: Release ${{ needs.parse_release_info.outputs.tag }}
        files: ./artifacts/**/*.* 
        body: |
          ## Leaf Package Manager ${{ needs.parse_release_info.outputs.tag }}

          üçÉ A simple, sudo-free package manager for Linux and Windows, written in Rust.

          ### Installation

          **Linux:**
          ```bash
          curl -sSL https://raw.githubusercontent.com/ktauchathuranga/leaf/main/install.sh | bash
          ```

          **Windows (PowerShell):**
          ```powershell
          irm https://raw.githubusercontent.com/ktauchathuranga/leaf/main/install.ps1 | iex
          ```

          ### Changes in this release
          See merged pull requests for details.
        draft: false
        prerelease: false
